library(tidyverse)
mayors<-read_csv(file="https://raw.githubusercontent.com/jmontgomery/jmontgomery.github.io/master/PDS/Datasets/Mayors.csv")
tweets<-read_csv("~/PDS/Tweets.csv")
tweets<-read_csv("~/Downloads/Tweets.csv")
#tweets that mention `police`
sum(str_detect(str_to_lower(tweets$Text),pattern = 'police'))
#tweets that mention police
str_detect(str_to_lower(tweets$Text),pattern = 'police')
#number of tweets that mention `police`
sum(str_detect(str_to_lower(tweets$Text),pattern = c('police', 'cops', 'policing', '#BLM', 'black lives')))
#looking at those tweets
str_extract(str_to_lower(tweets$Text), pattern = 'police')
#number of tweets that mention police
str_count(str_to_lower(tweets$Text),pattern = 'police')
#number of tweets that mention police
str_detect(str_to_lower(tweets$Text),pattern = 'police')
#looking at those tweets
str_extract(str_to_lower(tweets$Text), pattern = 'police|policing|cops|blm|black lives')
#looking at those tweets
str_extract(str_to_lower(tweets$Text), pattern = 'policing|cops|blm|black lives')
#looking at those tweets
sum(str_extract(str_to_lower(tweets$Text), pattern = 'policing|cops|blm|black lives'))
#looking at those tweets
str_detect(str_to_lower(tweets$Text), pattern = 'policing|cops|blm|black lives')
#looking at those tweets
sum(str_detect(str_to_lower(tweets$Text), pattern = 'policing|cops|blm|black lives'))
#looking at those tweets
sum(str_detect(str_to_lower(tweets$Text), pattern = 'police|policing|cops|blm|black lives'))
#looking at those tweets
sum(str_detect(str_to_lower(tweets$Text), pattern = 'police|policing|cops|blm|black lives|#blm'))
#looking at those tweets
sum(str_detect(str_to_lower(tweets$Text), pattern = 'police|policing|cops|black lives'))
#looking at those tweets
sum(str_detect(str_to_lower(tweets$Text), pattern = 'police|policing|cops|black lives matter|blm'))
#number of tweets that mention police
sum(str_detect(str_to_lower(tweets$Text),pattern = 'police|policing|cops|black lives matter|blm'))
#looking at those tweets
sum(str_detect(str_to_lower(tweets$Text), pattern = 'police|policing|cops|black lives matter|blm'))
#vector of logicals where these appear
str_detect(str_to_lower(tweets$Text),pattern = 'police|policing|cops|black lives matter|blm')
tweets
mayors
#2
tweets %>%
count(TwitterHandle)
#2
tweets %>%
count(ScreenName)
#2
tweets %>%
filter(matches == T)
#2
tweets %>%
filter(matches=T)
#2
tweets %>%
filter(matches=T)
#2
tweets <- rename(tweets, TwitterHandle=ScreenName)
tweets%>%
filter(TwitterHandle)
tweets%>%
filter(matches)
tweets%>%
filter(tweets, matches=T)
tweets%>%
filter(tweets, matches==T)
tweets%>%
filter(tweets, TwitterHandle %in% mayors$TwitterHandle)
tweets %>%
count(TwitterHandle)
copmatch %>%
count(TwitterHandle)
#vector of logicals where these appear
copmatch <- str_detect(str_to_lower(tweets$Text),pattern = 'police|policing|cops|law enforcement')
blmmatch <- str_detect(str_to_lower(tweets$Text),pattern = 'black lives matter|blm')
copmatch %>%
count(TwitterHandle)
group_by(tweets, TwitterHandle)
mayors$TwitterHandle
count(mayors$TwitterHandle)
mayors$TwitterHandle !=NA
sum(mayors$TwitterHandle !=NA)
#summarise(basicPolls_grouped, average_candidate=mean(pct), count=n())
mayors
#summarise(basicPolls_grouped, average_candidate=mean(pct), count=n())
mayors$TwitterHandle
#Read Dataset
rm(list=ls())
library(tidyverse)
VSG<-read_csv("~/Downloads/VOTER_Survey_Jan217_Release1-csv.csv")
#Just variables that start with inst
VSG<- VSG %>%
select(starts_with("inst_"))
#Recode NAs
columnnames<-colnames(VSG)
VSG %>%
map(colnames(VSG),recode,8 = NA)
VSG %>%
map(colnames(VSG),recode,8 = NA)
View(VSG)
##Here, I am loading in data, only choosing Super Tuesday states and relevant candidates.
primaryPolls<-read.csv('https://jmontgomery.github.io/PDS/Datasets/president_primary_polls_feb2020.csv', stringsAsFactors = F)
primaryPolls$start_date<-as.Date(primaryPolls$start_date, "%m/%d/%Y")
primaryPolls<-primaryPolls[primaryPolls$state%in%c("Alabama", "Arkansas", "California", "Colorado", "Maine", "Massachusetts", "Minnesota", "North Carolina", "Oklahoma", "Tennessee", "Texas", "Utah", "Vermont", "Virginia"),]
primaryPolls<-primaryPolls[primaryPolls$candidate_name%in%c("Amy Klobuchar", "Bernard Sanders", "Elizabeth Warren", "Joseph R. Biden Jr.", "Michael Bloomberg", "Pete Buttigieg", "Tom Steyer"),]
#I make a preliminary plot that shows the total for candidates across all of these states.
#Notice that Bloomberg's percent is in the negative and has a huge margin of error. This is
#because there isn't data for Bloomberg. R has to interpolate.
ggplot(data=primaryPolls)+
geom_smooth(mapping = aes(x=start_date, y=pct, color=candidate_name))
#We can interpret this plot by noting that Bernie Sanders and Joe Biden are the top-polling candidates,
#with Bernie on an upswing and Biden on a decline. Yet, this plot is too general. We can separate
#by state. The data separated into the 12 Super Tuesday states are below:
ggplot(data=primaryPolls)+
geom_point(mapping = aes(x=start_date, y=pct, color=candidate_name), alpha=.9) +
facet_wrap(~ state, nrow=2)
#by state
ggplot(data=primaryPolls) +
ggtitle("Candidate Support by State") +
geom_point(mapping = aes(x=start_date, y=pct, color=candidate_name), alpha=.9) +
labs(x="Polling Date", y="Percentage of Support", color = "Candidates")+
facet_wrap(~ state, nrow=2)+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5), axis.text.x=element_text(angle=90, hjust=1))
knitr::opts_chunk$set(echo = T, warning = F, message = F, fig.pos = 'H')
boix_data <- read.delim("~/Downloads/boix_data.txt")
library(dplyr)
boix_refined <- boix_data %>%
filter(interwar==1) %>%
select(threshold, threat, ethnic, area, country) %>%
mutate(rawArea = (10^area)*1000) %>%
mutate(dumArea = ifelse(rawArea>450000,0,1)) %>%
mutate(fragXarea = dumArea*ethnic)
#lm(threshold ~ threat + fragXarea, data=boix_refined)
revisedLM <- lm(threshold ~ threat + dumArea + ethnic + ethnic*dumArea, data=boix_refined)
summ <- summary(revisedLM)
areaEffect <- -9.221752-0.6244312*(boix_refined$ethnic)
ethnicEffect <- -16.7378118-0.6244312*(boix_refined$dumArea)
View(boix_refined)
boix_refined <- boix_refined %>%
mutate(areaEffect = -9.221752-0.6244312*dumArea) %>%
mutate(ethnicEffect = -16.7378118-0.6244312*ethnic)
library(ggplot2)
library(interplot)
library(interplot)
library(sjPlot)
plot_model(revisedLM, type = "int")
interplot(m = revisedLM, var1 = "dumArea", var2 = "ethnic", hist = T) +
geom_hline(yintercept = 0, linetype = "dashed")
ggplot(data=revisedLM, mapping=aes(x=as.factor(dumArea), y=ethnicEffect)) +
geom_boxplot()
